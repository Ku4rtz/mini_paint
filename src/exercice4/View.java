/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exercice4;

import com.sun.java.swing.plaf.windows.resources.windows;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.beans.value.ChangeListener;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author JEROME
 */
public class View extends javax.swing.JFrame {

    int selectedIndex = 0;
    Color color;

    /**
     * Creates new form View
     */
    public View() throws ClassNotFoundException {
        initComponents();
        
        TextColor.setBackground(color);
        //ShortCur Ctrl + Z
        BtnEffacer.setMnemonic(KeyEvent.VK_Z);
        
        //Prevent close with cross
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        
        //Loading recent files
        FileInputStream fis;
        try {
            fis = new FileInputStream(System.getProperty("user.home") + "//recentFiles.mj");
            try {
                ObjectInputStream ois = new ObjectInputStream(fis);
                ((Draw)jPanel1).setRecentFiles((ArrayList<RecentFile>)ois.readObject());
                ois.close();
                fis.close();
            } catch (IOException ex) {
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"Les fichiers récents sont introuvables. Il se peut que le fichier de sauvegarde ait été supprimé. Il vient d'être recréé.","Titre : Fichiers récents introuvables",JOptionPane.ERROR_MESSAGE);
            try {
                FileOutputStream fos = new FileOutputStream(System.getProperty("user.home") + "//recentFiles.mj");
            } catch (FileNotFoundException ex1) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
        
        Vector vect = new Vector();
        
        for (RecentFile files : ((Draw)jPanel1).getRecentFiles()) {
            vect.add(files.getFormattedDate() + " - " + files.getName() + " (" + files.getPath() + ")");
        }           
        jList1.setListData(vect);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new Draw();
        jPanel2 = new javax.swing.JPanel();
        TextColor = new javax.swing.JTextField();
        BtnEffacer = new javax.swing.JButton();
        BtnQuitter = new javax.swing.JButton();
        BtnSauver1 = new javax.swing.JButton();
        BtnSauver = new javax.swing.JButton();
        BtnCharger = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        toggleRect = new javax.swing.JToggleButton();
        toggleFilledRect = new javax.swing.JToggleButton();
        toggleCircle = new javax.swing.JToggleButton();
        toggleFilledCircle = new javax.swing.JToggleButton();
        toggleLine = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nouveau fichier");
        setBackground(new java.awt.Color(153, 153, 153));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(20, 20));
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image image = toolkit.getImage(getClass().getResource("pencil.png"));
        Point hotspot = new Point(0,0);
        Cursor cursor = toolkit.createCustomCursor(image, hotspot, "pencil");
        jPanel1.setCursor(cursor);
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 983, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        TextColor.setBackground(new java.awt.Color(0, 0, 0));
        TextColor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TextColor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TextColor.setFocusable(false);
        TextColor.setRequestFocusEnabled(false);
        TextColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextColorMouseClicked(evt);
            }
        });
        TextColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextColorActionPerformed(evt);
            }
        });

        BtnEffacer.setText("Tout effacer");
        BtnEffacer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEffacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEffacerActionPerformed(evt);
            }
        });

        BtnQuitter.setText("Quitter");
        BtnQuitter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnQuitterActionPerformed(evt);
            }
        });

        BtnSauver1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnSauver1.setLabel("Annuler");
        BtnSauver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSauver1ActionPerformed(evt);
            }
        });

        BtnSauver.setText("Sauver...");
        BtnSauver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnSauver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSauverActionPerformed(evt);
            }
        });

        BtnCharger.setText("Charger...");
        BtnCharger.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnCharger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnChargerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnSauver, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnCharger, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(TextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137)
                .addComponent(BtnSauver1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(BtnEffacer, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170)
                .addComponent(BtnQuitter, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSauver, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnCharger, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSauver1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnEffacer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnQuitter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.setBackground(new java.awt.Color(129, 162, 195));
        jToolBar1.setRollover(true);

        toggleRect.setBackground(new java.awt.Color(255, 255, 255));
        toggleRect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exercice4/rectangle.png"))); // NOI18N
        toggleRect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toggleRect.setFocusable(false);
        toggleRect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleRect.setMargin(new java.awt.Insets(3, 14, 3, 14));
        toggleRect.setPreferredSize(new java.awt.Dimension(40, 40));
        toggleRect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toggleRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleRectActionPerformed(evt);
            }
        });
        jToolBar1.add(toggleRect);

        toggleFilledRect.setBackground(new java.awt.Color(255, 255, 255));
        toggleFilledRect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exercice4/rectangleFill.png"))); // NOI18N
        toggleFilledRect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toggleFilledRect.setFocusable(false);
        toggleFilledRect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleFilledRect.setMargin(new java.awt.Insets(3, 14, 3, 14));
        toggleFilledRect.setPreferredSize(new java.awt.Dimension(40, 40));
        toggleFilledRect.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toggleFilledRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleFilledRectActionPerformed(evt);
            }
        });
        jToolBar1.add(toggleFilledRect);

        toggleCircle.setBackground(new java.awt.Color(255, 255, 255));
        toggleCircle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exercice4/circle.png"))); // NOI18N
        toggleCircle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toggleCircle.setFocusable(false);
        toggleCircle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleCircle.setMargin(new java.awt.Insets(3, 14, 3, 14));
        toggleCircle.setPreferredSize(new java.awt.Dimension(40, 40));
        toggleCircle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toggleCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleCircleActionPerformed(evt);
            }
        });
        jToolBar1.add(toggleCircle);

        toggleFilledCircle.setBackground(new java.awt.Color(255, 255, 255));
        toggleFilledCircle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exercice4/circleFill.png"))); // NOI18N
        toggleFilledCircle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toggleFilledCircle.setFocusable(false);
        toggleFilledCircle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleFilledCircle.setMargin(new java.awt.Insets(3, 14, 3, 14));
        toggleFilledCircle.setPreferredSize(new java.awt.Dimension(40, 40));
        toggleFilledCircle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toggleFilledCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleFilledCircleActionPerformed(evt);
            }
        });
        jToolBar1.add(toggleFilledCircle);

        toggleLine.setBackground(new java.awt.Color(255, 255, 255));
        toggleLine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exercice4/line.png"))); // NOI18N
        toggleLine.setSelected(true);
        toggleLine.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        toggleLine.setFocusable(false);
        toggleLine.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleLine.setMargin(new java.awt.Insets(3, 14, 3, 14));
        toggleLine.setPreferredSize(new java.awt.Dimension(40, 40));
        toggleLine.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toggleLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleLineActionPerformed(evt);
            }
        });
        jToolBar1.add(toggleLine);

        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fichier récents");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(102, 0, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Barre d'outils");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 985, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnEffacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEffacerActionPerformed
        ((Draw)jPanel1).clearAll();
        jPanel1.removeAll();
    }//GEN-LAST:event_BtnEffacerActionPerformed

    private void TextColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextColorActionPerformed

    private void TextColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextColorMouseClicked
        Color newColor = JColorChooser.showDialog(this, "Choisissez une couleur", Color.BLACK);
        TextColor.setBackground(newColor);
        ((Draw)jPanel1).setColorDrawing(newColor);
    }//GEN-LAST:event_TextColorMouseClicked

    private void BtnQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnQuitterActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (this, "Souhaitez-vous quitter? Si vous n'avez pas sauvegardé le projet, celui-ci sera supprimé.","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                System.exit(0);
            }
    }//GEN-LAST:event_BtnQuitterActionPerformed

    private void BtnSauver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSauver1ActionPerformed
        ((Draw)jPanel1).undo();
    }//GEN-LAST:event_BtnSauver1ActionPerformed

    private void BtnSauverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSauverActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("fichiers (*.mj)", "mj");
        jFileChooser1.setFileFilter(filter);
        jFileChooser1.showDialog(this, "Enregistrer");
        String name = jFileChooser1.getSelectedFile().getName();
        String path;
        if(jFileChooser1.getSelectedFile().getAbsolutePath().substring(jFileChooser1.getSelectedFile().getAbsolutePath().length() - 3).toString().equals(".mj"))
        {
            path = jFileChooser1.getSelectedFile().getAbsolutePath();
        }
        else
        {
            path = jFileChooser1.getSelectedFile().getAbsolutePath() + ".mj";
        }
        try {
            ((Draw)jPanel1).save(path, name, jList1);
        } catch (IOException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnSauverActionPerformed

    private void BtnChargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnChargerActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("fichiers (*.mj)", "mj");
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setFileFilter(filter);
        jFileChooser1.showDialog(this, "Charger");
        String path = jFileChooser1.getSelectedFile().getAbsolutePath();
        String name = jFileChooser1.getSelectedFile().getName();
        try {
            ((Draw)jPanel1).load(path, name, this);
            TextColor.setBackground(Color.BLACK);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnChargerActionPerformed

    private void toggleCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleCircleActionPerformed
        if(toggleCircle.isSelected())
        {
            toggleRect.setSelected(false);
            toggleFilledCircle.setSelected(false);
            toggleLine.setSelected(false);
            toggleFilledRect.setSelected(false);
        }
        else
        {
            toggleCircle.setSelected(true);
        }
        ((Draw)jPanel1).setTypeDrawing(0);
        ((Draw)jPanel1).setIsFilled(false);
    }//GEN-LAST:event_toggleCircleActionPerformed

    private void toggleRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleRectActionPerformed
        
        if(toggleRect.isSelected())
        {
            toggleCircle.setSelected(false);
            toggleFilledCircle.setSelected(false);
            toggleLine.setSelected(false);
            toggleFilledRect.setSelected(false);
        }
        else
        {
            toggleRect.setSelected(true);
        }
        ((Draw)jPanel1).setTypeDrawing(1);
        ((Draw)jPanel1).setIsFilled(false);
    }//GEN-LAST:event_toggleRectActionPerformed

    private void toggleFilledCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleFilledCircleActionPerformed
        if(toggleFilledCircle.isSelected())
        {
            toggleCircle.setSelected(false);
            toggleRect.setSelected(false);
            toggleLine.setSelected(false);
            toggleFilledRect.setSelected(false);
        }
        else
        {
            toggleFilledCircle.setSelected(true);
        }
        ((Draw)jPanel1).setTypeDrawing(0);
        ((Draw)jPanel1).setIsFilled(true);
    }//GEN-LAST:event_toggleFilledCircleActionPerformed

    private void toggleFilledRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleFilledRectActionPerformed
        if(toggleFilledRect.isSelected())
        {
            toggleCircle.setSelected(false);
            toggleRect.setSelected(false);
            toggleLine.setSelected(false);
            toggleFilledCircle.setSelected(false);
        }
        else
        {
            toggleFilledRect.setSelected(true);
        }
        ((Draw)jPanel1).setTypeDrawing(1);
        ((Draw)jPanel1).setIsFilled(true);
    }//GEN-LAST:event_toggleFilledRectActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2)
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (this, "Si vous chargez un autre projet, le précédent sera écrasé. Continuer?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                String label = jList1.getSelectedValue();
                Matcher m = Pattern.compile("\\(([^)]+)\\)").matcher(label);
                String path = "";
                while(m.find()) {
                    path = path + m.group(1);    
                }
                File f = new File(path);
                String name = f.getName();
                try {
                    ((Draw)jPanel1).load(path, name, this);
                    TextColor.setBackground(Color.BLACK);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (this, "Souhaitez-vous quitter? Si vous n'avez pas sauvegardé le projet, celui-ci sera supprimé.","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                System.exit(0);
            }
    }//GEN-LAST:event_formWindowClosing

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseExited

    private void toggleLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleLineActionPerformed
        if(toggleLine.isSelected())
        {
            toggleRect.setSelected(false);
            toggleFilledCircle.setSelected(false);
            toggleCircle.setSelected(false);
            toggleFilledRect.setSelected(false);
        }
        else
        {
            toggleLine.setSelected(true);
        }
        ((Draw)jPanel1).setTypeDrawing(2);
    }//GEN-LAST:event_toggleLineActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCharger;
    private javax.swing.JButton BtnEffacer;
    private javax.swing.JButton BtnQuitter;
    private javax.swing.JButton BtnSauver;
    private javax.swing.JButton BtnSauver1;
    private javax.swing.JTextField TextColor;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToggleButton toggleCircle;
    private javax.swing.JToggleButton toggleFilledCircle;
    private javax.swing.JToggleButton toggleFilledRect;
    private javax.swing.JToggleButton toggleLine;
    private javax.swing.JToggleButton toggleRect;
    // End of variables declaration//GEN-END:variables

}
